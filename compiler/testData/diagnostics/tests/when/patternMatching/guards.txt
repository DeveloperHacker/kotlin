package

public fun foo(/*0*/ any: kotlin.Any): kotlin.Int
public fun kotlin.Int.isEven(): kotlin.Boolean
public fun kotlin.Int.isOdd(): kotlin.Boolean

public final data class Pair</*0*/ F, /*1*/ S> {
    public constructor Pair</*0*/ F, /*1*/ S>(/*0*/ first: F, /*1*/ second: S)
    public final val first: F
    public final val second: S
    public final operator /*synthesized*/ fun component1(): F
    public final operator /*synthesized*/ fun component2(): S
    public final /*synthesized*/ fun copy(/*0*/ first: F = ..., /*1*/ second: S = ...): Pair<F, S>
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}
